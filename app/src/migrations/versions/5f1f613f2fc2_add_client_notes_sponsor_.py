"""add client.notes, sponsor.isRegSiteUpdate becomes RegSiteUpdated (enum)

Revision ID: 5f1f613f2fc2
Revises: 7ad03847e5db
Create Date: 2019-04-21 13:18:22.959000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.sql import table, column

# revision identifiers, used by Alembic.
revision = '5f1f613f2fc2'
down_revision = '7ad03847e5db'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('client', sa.Column('notes', sa.String(length=1024), nullable=True))
    op.alter_column('course', 'isStandard',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('event', 'isOnCalendar',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('service', 'isCalendarBlocked',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('sponsor', 'isLogoReceived',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('sponsor', 'isSponsorThankedFB',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('sponsor', 'isWebsiteUpdated',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('sponsorlevel', 'display',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('sponsorrace', 'isRDCertified',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('tag', 'isBuiltIn',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('user', 'active',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)

    # migrate isRegSiteUpdated to RegSiteUpdated
    op.add_column('sponsor', sa.Column('RegSiteUpdated', sa.Enum('no', 'yes', 'n/a'), nullable=False))

    sponsor = table('sponsor',
        column( 'isRegSiteUpdated', sa.Boolean() ),
        column( 'RegSiteUpdated', sa.Enum('no', 'yes', 'n/a') )

    )
    op.execute(
        sponsor.update().\
            where(sponsor.c.isRegSiteUpdated==op.inline_literal(0)).\
            values({'RegSiteUpdated':op.inline_literal('no')})
    )
    op.execute(
        sponsor.update().\
            where(sponsor.c.isRegSiteUpdated==op.inline_literal(1)).\
            values({'RegSiteUpdated':op.inline_literal('yes')})
    )

    op.drop_column('sponsor', 'isRegSiteUpdated')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'active',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('tag', 'isBuiltIn',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('sponsorrace', 'isRDCertified',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('sponsorlevel', 'display',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('sponsor', 'isWebsiteUpdated',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('sponsor', 'isSponsorThankedFB',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('sponsor', 'isLogoReceived',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('service', 'isCalendarBlocked',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('event', 'isOnCalendar',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('course', 'isStandard',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.drop_column('client', 'notes')

    op.add_column('sponsor', sa.Column('isRegSiteUpdated', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))

    sponsor = table('sponsor',
        column( 'isRegSiteUpdated', sa.Boolean() ),
        column( 'RegSiteUpdated', sa.Enum('no', 'yes', 'n/a') )

    )
    op.execute(
        sponsor.update().\
            where(sponsor.c.RegSiteUpdated==op.inline_literal('no')).\
            values({'isRegSiteUpdated':op.inline_literal(0)})
    )
    op.execute(
        sponsor.update().\
            where(sponsor.c.RegSiteUpdated==op.inline_literal('yes')).\
            values({'isRegSiteUpdated':op.inline_literal(1)})
    )

    op.drop_column('sponsor', 'RegSiteUpdated')

    # ### end Alembic commands ###
